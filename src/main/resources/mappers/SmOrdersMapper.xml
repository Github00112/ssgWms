<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssg.wsmt.smOrders.mapper.SmOrdersMapper">

    <select id="findCanceledOrders" resultType="com.ssg.wsmt.smOrders.domain.SmOrdersVo">
        SELECT
            id AS "id",
            quantity AS "quantity",
            payment_amount AS "paymentAmount",
            CASE seller_send_status
                WHEN '배송준비중' THEN 'PREPARING'
                WHEN '배송완료' THEN 'COMPLETE'
                WHEN '주문 취소' THEN 'CANCEL'
                ELSE seller_send_status -- 예기치 않은 상태를 처리
                END as "seller_send_status",
            created_at AS "createdAt",
            expected_at AS "expectedAt",
            customer_id AS "customerId",
            shopping_mall_id AS "shoppingMallId",
            products_id AS "productId"
        FROM sm_orders
        WHERE seller_send_status = 'CANCEL'
    </select>

    <select id="findPreparedOrders" resultType="com.ssg.wsmt.smOrders.domain.SmOrdersVo">
        SELECT
            id AS "id",
            quantity AS "quantity",
            payment_amount AS "paymentAmount",
            CASE seller_send_status
                WHEN '배송준비중' THEN 'PREPARING'
                WHEN '배송완료' THEN 'COMPLETE'
                WHEN '주문 취소' THEN 'CANCEL'
                ELSE seller_send_status -- 예기치 않은 상태를 처리
                END as "seller_send_status",
            created_at AS "createdAt",
            expected_at AS "expectedAt",
            customer_id AS "customerId",
            shopping_mall_id AS "shoppingMallId",
            products_id AS "productId"
        FROM sm_orders
            WHERE seller_send_status = 'PREPARING'
    </select>

    <select id="findAll" resultType="com.ssg.wsmt.smOrders.domain.SmOrdersVo">
        SELECT
            id AS "id",
            quantity AS "quantity",
            payment_amount AS "paymentAmount",
            seller_send_status as "seller_send_status",
            created_at AS "createdAt",
            expected_at AS "expectedAt",
            customer_id AS "customerId",
            shopping_mall_id AS "shoppingMallId",
            products_id AS "productId"
        FROM sm_orders
    </select>

    <select id="selectOne" resultType="com.ssg.wsmt.smOrders.domain.SmOrdersVo" >
        SELECT
            id AS "id",
            quantity AS "quantity",
            payment_amount AS "paymentAmount",
            seller_send_status as "seller_send_status",
            created_at AS "createdAt",
            expected_at AS "expectedAt",
            customer_id AS "customerId",
            shopping_mall_id AS "shoppingMallId",
            products_id AS "productId"
        FROM sm_orders
        WHERE id = #{id}
    </select>
    <update id="updateSmOrdersStatus">
        UPDATE sm_orders
        SET seller_send_status = #{seller_send_status}
        WHERE id = #{id}
    </update>




</mapper>